From bc0624fbc3a1feb506d8e7bed0113c32b30d2871 Mon Sep 17 00:00:00 2001
From: OrelEKratos <orel_e@eyal-emi.co.il>
Date: Wed, 14 Aug 2024 08:07:29 -0700
Subject: [PATCH] update read status register

---
 arch/arm/dts/imx8mp-evk.dts    |  4 ++--
 cmd/sf.c                       | 37 ++++++++++++++++++++++++++++++---
 drivers/mtd/spi/Kconfig        |  0
 drivers/mtd/spi/Makefile       |  0
 drivers/mtd/spi/fsl_espi_spl.c |  0
 drivers/mtd/spi/sandbox.c      |  0
 drivers/mtd/spi/sf-uclass.c    |  0
 drivers/mtd/spi/sf_dataflash.c |  0
 drivers/mtd/spi/sf_internal.h  |  2 +-
 drivers/mtd/spi/sf_mtd.c       |  0
 drivers/mtd/spi/sf_probe.c     |  0
 drivers/mtd/spi/spi-nor-core.c | 38 ++++++++++++++++++++++++++++++----
 drivers/mtd/spi/spi-nor-ids.c  |  0
 drivers/mtd/spi/spi-nor-tiny.c |  0
 include/linux/mtd/spi-nor.h    |  5 +++++
 15 files changed, 76 insertions(+), 10 deletions(-)
 mode change 100644 => 100755 drivers/mtd/spi/Kconfig
 mode change 100644 => 100755 drivers/mtd/spi/Makefile
 mode change 100644 => 100755 drivers/mtd/spi/fsl_espi_spl.c
 mode change 100644 => 100755 drivers/mtd/spi/sandbox.c
 mode change 100644 => 100755 drivers/mtd/spi/sf-uclass.c
 mode change 100644 => 100755 drivers/mtd/spi/sf_dataflash.c
 mode change 100644 => 100755 drivers/mtd/spi/sf_internal.h
 mode change 100644 => 100755 drivers/mtd/spi/sf_mtd.c
 mode change 100644 => 100755 drivers/mtd/spi/sf_probe.c
 mode change 100644 => 100755 drivers/mtd/spi/spi-nor-core.c
 mode change 100644 => 100755 drivers/mtd/spi/spi-nor-ids.c
 mode change 100644 => 100755 drivers/mtd/spi/spi-nor-tiny.c

diff --git a/arch/arm/dts/imx8mp-evk.dts b/arch/arm/dts/imx8mp-evk.dts
index 61e8a701961..d1c00def6d0 100644
--- a/arch/arm/dts/imx8mp-evk.dts
+++ b/arch/arm/dts/imx8mp-evk.dts
@@ -176,8 +176,8 @@
 		#size-cells = <1>;
 		compatible = "jedec,spi-nor";
 		spi-max-frequency = <80000000>;
-		spi-tx-bus-width = <4>;
-		spi-rx-bus-width = <4>;
+		spi-tx-bus-width = <1>;
+		spi-rx-bus-width = <1>;
 	};
 };
 
diff --git a/cmd/sf.c b/cmd/sf.c
index 8bdebd9fd8f..380b0908211 100644
--- a/cmd/sf.c
+++ b/cmd/sf.c
@@ -18,7 +18,6 @@
 #include <asm/cache.h>
 #include <jffs2/jffs2.h>
 #include <linux/mtd/mtd.h>
-
 #include <asm/io.h>
 #include <dm/device-internal.h>
 
@@ -384,6 +383,31 @@ static int do_spi_protect(int argc, char *const argv[])
 	return ret == 0 ? 0 : 1;
 }
 
+
+
+static int do_micron_read_status(int argc, char *const argv[])
+{
+    struct spi_flash *flash;
+    u8 status;
+    int ret;
+
+    flash = spi_flash_probe(0, 0, 1000000, SPI_MODE_0);
+    if (!flash) {
+        printf("SPI flash probe failed\n");
+        return 1;
+    }
+
+    ret = spi_flash_cmd_get_sw_write_prot(flash);
+    printf("Status Register: 0x%04X\n", ret); 
+    
+    //ret = spi_flash_cmd_get_sw_write_prot_flag(flash);
+    //printf("Flag Status Register: 0x%02X\n", ret); 
+	spi_flash_free(flash);
+    return 0;
+}
+
+
+
 enum {
 	STAGE_ERASE,
 	STAGE_CHECK,
@@ -580,6 +604,8 @@ static int do_spi_flash(struct cmd_tbl *cmdtp, int flag, int argc,
 		ret = do_spi_flash_erase(argc, argv);
 	else if (strcmp(cmd, "protect") == 0)
 		ret = do_spi_protect(argc, argv);
+	else if (strcmp(cmd, "strg") == 0)
+		ret = do_micron_read_status(argc, argv);	
 	else if (IS_ENABLED(CONFIG_CMD_SF_TEST) && !strcmp(cmd, "test"))
 		ret = do_spi_flash_test(argc, argv);
 	else
@@ -595,7 +621,7 @@ usage:
 
 #ifdef CONFIG_SYS_LONGHELP
 static const char long_help[] =
-	"probe [[bus:]cs] [hz] [mode]	- init flash device on given SPI bus\n"
+	"probe [[bus:]cs] [hz] [mode]	- init flash device on given SPI bus test\n"
 	"				  and chip select\n"
 	"sf read addr offset|partition len	- read `len' bytes starting at\n"
 	"				          `offset' or from start of mtd\n"
@@ -610,7 +636,12 @@ static const char long_help[] =
 	"					  at `addr' to flash at `offset'\n"
 	"					  or to start of mtd `partition'\n"
 	"sf protect lock/unlock sector len	- protect/unprotect 'len' bytes starting\n"
-	"					  at address 'sector'"
+	" 					  at address 'sector'\n"
+	"sf strg offset dummy 			- read a register located at 'offset' with\n"
+	" 					'dummy' cycles and print the value\n"
+	"sf wrar offset val 			- write 'val' to a register located at\n"
+	" 					'offset'\n"
+						 
 #ifdef CONFIG_CMD_SF_TEST
 	"\nsf test offset len		- run a very basic destructive test"
 #endif
diff --git a/drivers/mtd/spi/Kconfig b/drivers/mtd/spi/Kconfig
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/Makefile b/drivers/mtd/spi/Makefile
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/fsl_espi_spl.c b/drivers/mtd/spi/fsl_espi_spl.c
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/sandbox.c b/drivers/mtd/spi/sandbox.c
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/sf-uclass.c b/drivers/mtd/spi/sf-uclass.c
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/sf_dataflash.c b/drivers/mtd/spi/sf_dataflash.c
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/sf_internal.h b/drivers/mtd/spi/sf_internal.h
old mode 100644
new mode 100755
index d03ce417663..16bb0c90106
--- a/drivers/mtd/spi/sf_internal.h
+++ b/drivers/mtd/spi/sf_internal.h
@@ -79,7 +79,7 @@ extern const struct flash_info spi_nor_ids[];
 
 /* Get software write-protect value (BP bits) */
 int spi_flash_cmd_get_sw_write_prot(struct spi_flash *flash);
-
+//int spi_flash_cmd_get_sw_write_prot_flag(struct spi_flash *flash);
 
 #if CONFIG_IS_ENABLED(SPI_FLASH_MTD)
 int spi_flash_mtd_register(struct spi_flash *flash);
diff --git a/drivers/mtd/spi/sf_mtd.c b/drivers/mtd/spi/sf_mtd.c
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/sf_probe.c b/drivers/mtd/spi/sf_probe.c
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/spi-nor-core.c b/drivers/mtd/spi/spi-nor-core.c
old mode 100644
new mode 100755
index ddf0851414b..5e2b9bc6817
--- a/drivers/mtd/spi/spi-nor-core.c
+++ b/drivers/mtd/spi/spi-nor-core.c
@@ -3914,10 +3914,40 @@ int spi_nor_scan(struct spi_nor *nor)
 /* U-Boot specific functions, need to extend MTD to support these */
 int spi_flash_cmd_get_sw_write_prot(struct spi_nor *nor)
 {
-	int sr = read_sr(nor);
+	u8 sr = read_sr(nor);
 
-	if (sr < 0)
-		return sr;
+	//if (sr < 0)
+		//return sr;
+	u8 fsr = read_fsr(nor);
+		
+	return (sr << 8) | fsr;
+	//return (sr >> 2) & 7;
+}
+
+/*int spi_flash_cmd_get_sw_write_prot_flag(struct spi_nor *nor)
+{
+	int sr = read_fsr(nor);
+
+	//if (sr < 0)
+		return fsr;
 
-	return (sr >> 2) & 7;
+	//return (sr >> 2) & 7;
+}*/
+
+#ifdef CONFIG_SPI_FLASH_SPANSION
+int spi_nor_read_any_reg(struct spi_nor *nor, u32 addr, u8 dummy, u8 *val)
+{
+ return spansion_read_any_reg(nor, addr, dummy, val);
+}
+hgh
+int spi_nor_write_any_reg(struct spi_nor *nor, u32 addr, u8 val)
+{
+ int ret;
+
+ ret = write_enable(nor);
+ if (ret)
+ return ret;
+
+ return spansion_write_any_reg(nor, addr, val);
 }
+#endif
diff --git a/drivers/mtd/spi/spi-nor-ids.c b/drivers/mtd/spi/spi-nor-ids.c
old mode 100644
new mode 100755
diff --git a/drivers/mtd/spi/spi-nor-tiny.c b/drivers/mtd/spi/spi-nor-tiny.c
old mode 100644
new mode 100755
diff --git a/include/linux/mtd/spi-nor.h b/include/linux/mtd/spi-nor.h
index 2a37ab46ae3..2a077d736c9 100644
--- a/include/linux/mtd/spi-nor.h
+++ b/include/linux/mtd/spi-nor.h
@@ -612,4 +612,9 @@ static inline int spi_nor_remove(struct spi_nor *nor)
 int spi_nor_remove(struct spi_nor *nor);
 #endif
 
+#ifdef CONFIG_SPI_FLASH_SPANSION
+int spi_nor_read_any_reg(struct spi_nor *nor, u32 addr, u8 dummy, u8 *val);
+int spi_nor_write_any_reg(struct spi_nor *nor, u32 addr, u8 val);
+#endif
+
 #endif
